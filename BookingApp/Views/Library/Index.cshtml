@{
    ViewData["Title"] = "Library Admin";
}

@model BookingApp.Models.AvailableBooksViewModel

<div class="container">
    <div class="row">
        <div class="col">
            @Html.ActionLink("Log Out", "LogOut", "Library")
        </div>
        <div class="col">
            @Html.ActionLink("Change Password", "Index", "ChangePassword")
        </div>
    </div>
    <div class="row">
        @{
            Microsoft.Extensions.Primitives.StringValues queryVal;

            if (Context.Request.Query.TryGetValue("error", out queryVal) &&
                queryVal.FirstOrDefault() == "reserved")
            {
                <p class="text-danger">There is reservation linked. Cancel it before.</p>
            }
            else if (Context.Request.Query.TryGetValue("error", out queryVal) &&
                queryVal.FirstOrDefault() == "oneAdmin")
            {
                <p class="text-danger">There is only one admin.</p>
            }
            else if (Context.Request.Query.TryGetValue("error", out queryVal) &&
               queryVal.FirstOrDefault() == "sameUser")
            {
                <p class="text-danger">You cannot delete yourself.</p>
            }
            else if (Context.Request.Query.TryGetValue("error", out queryVal) &&
               queryVal.FirstOrDefault() == "wrongUser")
            {
                <p class="text-danger">You cannot edit unexisting users.</p>
            }
            else if (Context.Request.Query.TryGetValue("error", out queryVal) &&
               queryVal.FirstOrDefault() == "wrongBook")
            {
                <p class="text-danger">You cannot edit unexisting books.</p>
            }
            else if (Context.Request.Query.TryGetValue("error", out queryVal) &&
               queryVal.FirstOrDefault() == "error")
            {
                <p class="text-danger">Try again later.</p>
            }
            else if (Context.Request.Query.TryGetValue("msg", out queryVal) &&
              queryVal.FirstOrDefault() == "userDeleted")
            {
                <p class="text-success">The user was deleted.</p>
            }
            else if (Context.Request.Query.TryGetValue("msg", out queryVal) &&
              queryVal.FirstOrDefault() == "bookDeleted")
            {
                <p class="text-success">The book was deleted.</p>
            }
            else if (Context.Request.Query.TryGetValue("msg", out queryVal) &&
              queryVal.FirstOrDefault() == "reservationCanceled")
            {
                <p class="text-success">The reservation was canceled.</p>
            }
        }
    </div>
    <div>
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" href="#booksTab" data-toggle="tab">Books</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#reservations" data-toggle="tab">Reservations</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#users" data-toggle="tab">Users</a>
            </li>
        </ul>

        <div class="tab-content clearfix">
            <div class="tab-pane active" id="booksTab">
                <h4>Books Available</h4>
                @Html.ActionLink("New", "Index", "Book")
                <dl class="row">
                    <dd class="col-sm-10">
                        <table class="tblResponsive">
                            <thead>
                                <tr>
                                    <th>Book</th>
                                    <th>Author</th>
                                    <th>Publication year</th>
                                    <th>Available</th>
                                    <th>Total</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.AvailableBooks)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Book)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Author)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PublicationYear)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Available)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Total)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "Update", "Book", new { id = item.BookId })
                                        </td>
                                        <td>
                                            @Html.ActionLink("Delete", "DeleteBook", "Library", new { id = item.BookId }, new { @onclick = "return confirm('Are you sure?')" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </dd>
                </dl>
            </div>
            <div class="tab-pane" id="reservations">
                <h4>Reserved Books</h4>
                <dl class="row">
                    <dd class="col-sm-10">
                        <table class="tblResponsive">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>User</th>
                                    <th>Book</th>
                                    <th>Author</th>
                                    <th>Date</th>
                                    <th>Collected</th>
                                    <th>Return</th>
                                    <th>Returned</th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.ReservedBooks)
                                {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReservationId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.User)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Book)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Author)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Date)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CollectedDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReturnDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReturnedDate)
                                    </td>
                                    <td>
                                        @Html.ActionLink("Cancel", "CancelReservation", "Library", new { id = item.ReservationId }, new { @onclick = "return confirm('Are you sure?')" })
                                    </td>
                                    <td>
                                        @Html.ActionLink("Collect", "CollectBook", "Library")
                                    </td>
                                    <td>
                                        @Html.ActionLink("Return", "ReturnedBook", "Library")
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </dd>
                </dl>
            </div>
            <div class="tab-pane" id="users">
                <h4>Users</h4>
                @Html.ActionLink("New", "Index", "User")
                <dl class="row">
                    <dd class="col-sm-10">
                        <table class="tblResponsive">
                            <thead>
                                <tr>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Registered</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Users)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Username)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Email)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Role)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Registered)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", "User", new { id = item.UserId })
                                        </td>
                                        <td>
                                            @Html.ActionLink("Delete", "DeleteUser", "Library", new { id = item.UserId }, new { @onclick = "return confirm('Are you sure?')" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css">

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js"></script>

<script>
    $('.tblResponsive').DataTable({
        responsive: true
    });
</script>